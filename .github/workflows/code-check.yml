name: 'コードチェック'
on: ['pull_request', 'workflow_dispatch']
jobs:
  PHP:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: contents
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
      redis:
        image: redis:5
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '8.2'
      - uses: actions/checkout@v2
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 redis" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 mysql" | sudo tee -a /etc/hosts
      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
      - name: Clear Config
        run: php artisan config:clear
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: PHPUnit
        run: composer run phpunit
        env:
          DB_HOST: 127.0.0.1
          DB_DATABASE: test
          DB_USERNAME: test
          DB_PASSWORD: test
      - name: larastan (PHPStan)
        run: composer run phpstan
      - name: PHP CodeSniffer
        run: composer run phpcs

  REACT:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: contents
    steps:
      - uses: actions/checkout@v2
      - name: yarn install
        run: yarn install
      - name: prettier
        run: yarn prettier-check
      - name: eslint
        run: yarn eslint
